name: CI
on: [push, pull_request]

env:
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  CARGO_TERM_VERBOSE: true

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [msrv, msrv-no-std, stable, beta, nightly, macos, windows]
        include:
          - build: msrv
            os: ubuntu-latest
            rust: 1.31.0
          - build: msrv-no-std
            os: ubuntu-latest
            rust: 1.36.0
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: nightly
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Update Cargo.lock
      run: cargo update
    - name: Build
      run: cargo build
    - name: Test
      if: startsWith(matrix.build, 'msrv') == false
      run: cargo test
    - name: Build with stable features
      if: matrix.build != 'msrv'
      run: cargo build --features serde
    - name: Test with stable features
      if: startsWith(matrix.build, 'msrv') == false
      run: cargo test --features serde
    - name: Build with unstable features
      if: startsWith(matrix.build, 'msrv') == false
      run: cargo build --features unstable
    - name: Test with unstable features
      if: startsWith(matrix.build, 'msrv') == false
      run: cargo test --features unstable
    - name: Build with all features
      if: matrix.rust == 'nightly'
      run: cargo build --all-features
    - name: Test with all features
      if: matrix.rust == 'nightly'
      run: cargo test --all-features

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    - name: Update Cargo.lock
      run: cargo update
    - name: Check clippy
      run: cargo clippy --features serde,unstable
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Check documentation
      run: cargo doc --features serde,unstable --no-deps

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri
    - name: Update Cargo.lock
      run: cargo update
    - name: Setup Miri
      run: cargo miri setup
    - name: Test with all features using Miri
      run: cargo miri test --all-features
